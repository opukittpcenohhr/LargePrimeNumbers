#include <map>
#include <string>
#include <vector>

#include "benchmark_data.h"

namespace {

const std::map<int, std::vector<std::string>> COMPOSITE_NUMBERS_BY_LEN = {
    {32,
     {
         "30113326269201424236939064140457",
         "31870527597300650672571456103901",
         "16445028083476668526240001854037",
         "56105278133213529135883715570539",
     }},
    {36,
     {
         "140331203147069878105880950721117549",
         "227610066653216563589811696301563757",
         "101310395233001948966202076376992151",
         "454215319739894027523026359886072587",
     }},
    {
        40,
        {
            "1341607143054843295547875435911311905603",
            "1059285451583551757136470012326168588211",
            "2091670908976974559557349218113349872537",
            "5483796096268107917873364568462891391489",
        },
    },
    {42,
     {
         "699004724346603726808873010695909898715301",
         "323625121576583872016625431084244826643719",
         "169990781102809563810476653384677149067593",
         "692208583265230868345078053241847923557531",
     }},
    {44,
     {
         "78557707277711944408813356963986078545605353",
         "49574663404422284323912558249674569048374199",
         "14072239672140078566948347701006855196527359",
         "89318364773291449689396095503502029711463867",
     }},
    {46,
     {
         "3949636775596748375228311760105549562554372279",
         "3013757924334904635755632689370794028758312287",
         "2166544711417488176144109263469319459138950817",
         "1227970244726132302414144733718246630334933457",
     }},
    {48,
     {
         "214108560153417661906862628449317907379325899017",
         "119012167475755260742853754537856452568006013057",
         "231585709976443166303654553891689652002612548451",
         "207664371462601836760816945444169966007517618661",
     }},
    {50,
     {
         "16001540072473582624298580657033478499527103960501",
         "45259614007442517325437121480339719298296284476841",
         "42050080283993441771863866335296608251393384745331",
         "39605391140139351309590713465425102375506112814753",
     }}};

}

namespace LargePrimeNumbers {

std::map<int, std::vector<std::string>> get_composite_numbers_by_length() {
  return COMPOSITE_NUMBERS_BY_LEN;
}

}  // namespace LargePrimeNumbers
